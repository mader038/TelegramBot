import datetime
import sqlite3
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message, CallbackQuery, KeyboardButton, \
    ReplyKeyboardMarkup
import databaseBot
from databaseBot import checker_people, return_all, birth_now_months, owner_birth, search_birth
from formules import month_to_number, number_to_month, calc_age, days_until_birthday, birth_nearests

BOT_TOKEN = '6832196238:AAHOMT7xy4omFntn2k-pjn6-M4A8Q3NO3Xs'

admins = [1022869374]

storage = MemoryStorage()

bot = Bot(BOT_TOKEN)
dp = Dispatcher(storage=storage)

command1 = KeyboardButton(text='üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ')
command2 = KeyboardButton(text='üçæ –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è')
command3 = KeyboardButton(text='üéä –í—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è')
command4 = KeyboardButton(text='–ö–æ–≥–¥–∞ –º–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è? ü§î')
command5 = KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏–µ –¥—Ä—É–≥–∞ üíã')
command6 = KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ üòï')
command7 = KeyboardButton(text='üîó –ü–æ–º–æ—â—å')

keyboard_all = ReplyKeyboardMarkup(keyboard=[[command1, command4],
                                             [command2, command5],
                                             [command3, command6],
                                             [command7]],
                                   resize_keyboard=True)


@dp.message(CommandStart())  # –•–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
async def process_start_command(message: Message):
    if checker_people(message.from_user.id):
        print(f'–£–æ–ø, –Ω–æ–≤—ã–π —é–∑–µ—Ä {message.from_user.username} {message.from_user.first_name} {message.from_user.id}')
        register = InlineKeyboardButton(
            text='–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è! üî•',
            callback_data='register_pressed'
        )
        regist = InlineKeyboardMarkup(
            inline_keyboard=[[register]]
        )
        await message.answer(
            text='–ü—Ä–∏–≤–µ—Ç!! –Ø —Ç–≤–æ–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –¥–Ω—è–º —Ä–æ–∂–¥–µ–Ω–∏—è–º!\n'
                 '–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º —Å —Ç–æ–±–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å, —è –ø–æ–ø—Ä–æ—à—É —Ç–µ–±—è –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. üòù\n'
                 '–û—Ç —Ç–µ–±—è –ø–æ—á—Ç–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è! –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ) ‚¨áÔ∏è',
            reply_markup=regist
        )
    else:
        returned_user = InlineKeyboardButton(
            text='–í –º–µ–Ω—é! ü•≥',
            callback_data='returns_pressed'
        )
        returned = InlineKeyboardMarkup(
            inline_keyboard=[[returned_user]]
        )
        await message.answer(
            text='–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –í–∏–∂—É —Ç—ã —É–∂–µ –∫–æ–≥–¥–∞ —Ç–æ –±—ã–ª –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\n'
                 '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏! üòâ',
            reply_markup=returned
        )


@dp.callback_query(F.data == 'returns_pressed')
async def help2(callback: CallbackQuery):
    help_bot = InlineKeyboardButton(
        text='üîó –ü–æ–º–æ—â—å',
        callback_data='help_pressed'
    )
    menu_button = InlineKeyboardMarkup(
        inline_keyboard=[[help_bot]]
    )
    await callback.message.answer(
        text='–í–∂—É—É—É—Ö! ‚Äçüå´Ô∏è',
        reply_markup=keyboard_all
    )
    await callback.message.answer(
        text='–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é!\n'
             '–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—É\n'
             '–ò —è —Ç—É—Ç –∂–µ —Ç–µ–±–µ –æ—Ç–≤–µ—á—É. üòâ',
        reply_markup=menu_button
    )


@dp.callback_query(F.data == 'help_pressed')
async def help2(callback: CallbackQuery):
    await callback.message.answer(
        text='–ü—Ä–∏–≤–µ—Ç üëã, –≤–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã!!\n'
             '1. /births_in_now_months - –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ.\n'
             '2. /births_nearest - –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
             '3. /every_births - –í—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –¥—Ä—É–∑–µ–π.\n'
             '4. /my_births - –°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Ç–≤–æ–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
             '5. /delete_friend - –£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n'
             '–ï—Å–ª–∏ —á—Ç–æ, –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–∏–º–∏! ‚ù§\n\n'
             'üö® –ß—Ç–æ–±—ã –≤–∞–º –Ω–µ –≤—ã–≤–æ–¥–∏–ª–æ, —á—Ç–æ —É –≤–∞—Å –ø—É—Å—Ç–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–∑–µ–π, —Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö!\n'
             '/add_births - –î–æ–±–∞–≤—å –¥—Ä—É–≥–∞ –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫!',
        reply_markup=keyboard_all
    )


@dp.message(Command(commands='help'))
@dp.message(F.text == 'üîó –ü–æ–º–æ—â—å')
async def help(message: Message):
    await message.answer(
        text='–ü—Ä–∏–≤–µ—Ç üëã, –≤–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã!!\n'
             '1. /births_in_now_months - –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ.\n'
             '2. /births_nearest - –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
             '3. /every_births - –í—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –¥—Ä—É–∑–µ–π.\n'
             '4. /my_births - –°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Ç–≤–æ–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
             '5. /delete_friend - –£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n'
             '–ï—Å–ª–∏ —á—Ç–æ, –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –Ω–∏–º–∏! ‚ù§\n\n'
             'üö® –ß—Ç–æ–±—ã –≤–∞–º –Ω–µ –≤—ã–≤–æ–¥–∏–ª–æ, —á—Ç–æ —É –≤–∞—Å –ø—É—Å—Ç–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–∑–µ–π, —Ç–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö!\n'
             '/add_births - –î–æ–±–∞–≤—å –¥—Ä—É–≥–∞ –≤ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫!',
        reply_markup=keyboard_all
    )


@dp.message(Command(commands='births_in_now_months'))
@dp.message(F.text == 'üéâ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ')
async def birth_in_now_months(message: Message):
    result = birth_now_months(message.from_user.id, number_to_month(datetime.date.today().month))
    text = f'{databaseBot.months_for_data.get(number_to_month(datetime.date.today().month))}\n'
    if result == list():
        text += f'–ü–æ—Ö–æ–∂–µ —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç..'
        await message.answer(text)
    else:
        for elem in result:
            text += f'‚Ä¢ {elem[1]} {elem[2]}, {elem[4]} {databaseBot.months_data.get(elem[5])}' \
                    f', {calc_age(elem[6], month_to_number(elem[5]), elem[4])} –ª–µ—Ç\n'
        await message.answer(text)


@dp.message(Command(commands='every_births'))
@dp.message(F.text == 'üéä –í—Å–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è')
async def every_births(message: Message):
    for mounth_num in range(1, 13):
        result = birth_now_months(message.from_user.id, number_to_month(mounth_num))
        text = f'{databaseBot.months_for_data.get(number_to_month(mounth_num))}\n'
        if result == list():
            text += f'–ü–æ—Ö–æ–∂–µ —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç..'
            await message.answer(text)
        else:
            for elem in result:
                text += f'‚Ä¢ {elem[1]} {elem[2]}, {elem[4]} {databaseBot.months_data.get(elem[5])}' \
                        f', {calc_age(elem[6], month_to_number(elem[5]), elem[4])} –ª–µ—Ç\n'
            await message.answer(text)


@dp.message(Command(commands='my_births'))
@dp.message(F.text == '–ö–æ–≥–¥–∞ –º–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è? ü§î')
async def every_births(message: Message):
    id_user = message.from_user.id
    if checker_people(id_user):
        await message.answer(
            f'–ü–æ—Ö–æ–∂–µ –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å..\n'
            f'–ù–∞–ø–∏—à–∏—Ç–µ /start –∏ –ø—Ä–æ–π–¥–µ—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.'
        )
    else:
        await message.answer(
            f'–î–æ –≤–∞—à–µ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å '
            f'{days_until_birthday(owner_birth(id_user)[2], month_to_number(owner_birth(id_user)[1]), owner_birth(id_user)[0])}'
            f' —Å—É—Ç–æ–∫! ü•∞')


@dp.message(Command(commands='births_nearest'))
@dp.message(F.text == 'üçæ –ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è')
async def birth_nearest(message: Message):
    days = list()
    gender = ''
    friends = return_all(message.from_user.id)
    for elem in friends:
        days.append(days_until_birthday(elem[6], month_to_number(elem[5]), elem[4]))
    if days != list():
        calculator = birth_nearests(min(days))
        search = search_birth(calculator[2], number_to_month(int(calculator[1])), message.from_user.id)
        for people in search:
            if people[3] == 'male':
                gender = '–µ–≥–æ'
            else:
                gender = '–µ–µ'
            await message.answer(
                f'–ë–ª–∏–∂–∞–π—à–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –±—É–¥–µ—Ç —É {people[1]} {people[2]}!\n'
                f'–î–∞—Ç–∞ {gender} –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: {people[4]} {databaseBot.months_data.get(people[5])} {people[6]} –≥–æ–¥–∞.\n'
                f'–î–æ —ç—Ç–æ–π –¥–∞—Ç—ã –æ—Å—Ç–∞–ª–æ—Å—å {min(days)} —Å—É—Ç–æ–∫!'
            )
    else:
        await message.answer(
            f'–ü–æ—Ö–æ–∂–µ –≤–∞—à —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.. üòû\n'
            f'–î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–∑–µ–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_births üòÅ'
        )


@dp.message(Command(commands='delete_friend'))
@dp.message(F.text == '–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ üòï')
async def delete_birth(message: Message):
    await message.answer(
        text='–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è.. –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. üòû'
    )


if __name__ == '__main__':
    dp.run_polling(bot)
